<mapml>
  <head>
    <title>An OSMTILE tile cache in Map Markup Language</title>
    <meta http-equiv="Content-Type" content="text/mapml"/>
    <meta charset="utf-8"/>
    <meta name="projection" content="OSMTILE"/>
    <link rel="license" href="https://www.nrcan.gc.ca/earth-sciences/geography/topographic-information/free-data-geogratis/licence/17285" title="Canada Base Map Â© Natural Resources Canada"/>
  </head>
  <body>
    <extent units="OSMTILE">
      <input name="z" type="zoom" value="0" min="0" max="18"/>
      <input name="x" type="location" units="tilematrix" axis="column"/>
      <input name="y" type="location" units="tilematrix" axis="row"/>
      <!-- below input is a hack to workaround the fact that the {s} variable is 
           quasi-hardcoded in Leaflet.  The template won't be used if there
           aren't matching inputs and variable references. So the client needs
           to supply an input@name=s if they want to use the hardcoding, or provide
           a literal value of host name if necessary for the host.domain.tld in the template -->
      <input name="srvr" type="hidden" shard="true" list="servers"/>
      <datalist id="servers">
        <option value="a"/>
        <option value="b"/>
        <option value="c"/>
      </datalist>
      <input name="xmn" type="location" position="top-left" axis="x"  min="0.0" max="256.0"/>
      <input name="ymn" type="location"  position="top-left" axis="y"  min="0.0" max="256.0"/>
      <input name="xmx" type="location" position="bottom-right" axis="x" min="0.0" max="256.0"/>
      <input name="ymx" type="location"  position="bottom-right" axis="y" min="0.0" max="256.0"/>
      <link rel="tile" tref="https://{srvr}.tile.openstreetmap.org/{z}/{x}/{y}.png"/>
    </extent>
  </body>
</mapml>